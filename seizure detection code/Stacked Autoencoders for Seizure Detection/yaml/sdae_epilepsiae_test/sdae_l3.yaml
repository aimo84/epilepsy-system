!obj:pylearn2.train.Train {
    dataset: &train !obj:pylearn2.datasets.transformer_dataset.TransformerDataset {
        raw: !obj:pylearn2.datasets.transformer_dataset.TransformerDataset {
            raw: !obj:pylearn2ext.epilepsiae.EpilepsiaeTest {
                patient_id: %(patient_id)i,
                which_set: 'train',
                preprocessor_path: '%(save_path)s/sdae_scaler.pkl',
                data_dir: '%(data_path)s',
                leave_one_out_seizure: %(leave_one_out_seizure)i,
                sample_size_second: 1,
                batch_size: %(batch_size)i
            },
            transformer: !pkl: "%(save_path)s/sdae_l1.pkl"
        },
        transformer: !pkl: "%(save_path)s/sdae_l2.pkl"
    },
    model: !obj:pylearn2.models.softmax_regression.SoftmaxRegression {
        nvis : %(nvis)i,
        n_classes : %(n_classes)i,
        irange: 0.05
    },
    algorithm: !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate : 1e-3,
        batch_size : %(batch_size)i,
        monitoring_batches : %(monitoring_batches)i,
        monitoring_dataset : *train,
        cost: !obj:pylearn2.costs.cost.SumOfCosts {
            costs: [
                !obj:pylearn2.costs.mlp.Default {},
                !obj:pylearn2.costs.mlp.WeightDecay {
                    coeffs: [
                        3e-3
                    ]
                }
            ]
        },
        termination_criterion : !obj:pylearn2.termination_criteria.EpochCounter {
            max_epochs: %(max_epochs)i,
        },
    },
    save_path: "%(save_path)s/sdae_l3.pkl",
    save_freq: 1
}
